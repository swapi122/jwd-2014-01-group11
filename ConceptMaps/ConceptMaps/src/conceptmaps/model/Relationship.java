package conceptmaps.model;

// Generated Nov 10, 2014 10:58:18 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Relationship generated by hbm2java
 */
@Entity
@Table(name = "relationship", catalog = "conceptmapsdb")
public class Relationship implements java.io.Serializable {

	private String idrelationship;
	private MemberAssignment memberAssignment;
	private Conceptmaps conceptmaps;
	private Concept conceptByConceptFrom;
	private Concept conceptByConceptTo;
	private String name;
	private Set<Link> links = new HashSet<Link>(0);

	public Relationship() {
	}

	public Relationship(String idrelationship, Concept conceptByConceptFrom,
			Concept conceptByConceptTo) {
		this.idrelationship = idrelationship;
		this.conceptByConceptFrom = conceptByConceptFrom;
		this.conceptByConceptTo = conceptByConceptTo;
	}

	public Relationship(String idrelationship,
			MemberAssignment memberAssignment, Conceptmaps conceptmaps,
			Concept conceptByConceptFrom, Concept conceptByConceptTo,
			String name, Set<Link> links) {
		this.idrelationship = idrelationship;
		this.memberAssignment = memberAssignment;
		this.conceptmaps = conceptmaps;
		this.conceptByConceptFrom = conceptByConceptFrom;
		this.conceptByConceptTo = conceptByConceptTo;
		this.name = name;
		this.links = links;
	}

	@Id
	@Column(name = "idrelationship", unique = true, nullable = false, length = 50)
	public String getIdrelationship() {
		return this.idrelationship;
	}

	public void setIdrelationship(String idrelationship) {
		this.idrelationship = idrelationship;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idMemberAssignment")
	public MemberAssignment getMemberAssignment() {
		return this.memberAssignment;
	}

	public void setMemberAssignment(MemberAssignment memberAssignment) {
		this.memberAssignment = memberAssignment;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idConceptMaps")
	public Conceptmaps getConceptmaps() {
		return this.conceptmaps;
	}

	public void setConceptmaps(Conceptmaps conceptmaps) {
		this.conceptmaps = conceptmaps;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "conceptFrom", nullable = false)
	public Concept getConceptByConceptFrom() {
		return this.conceptByConceptFrom;
	}

	public void setConceptByConceptFrom(Concept conceptByConceptFrom) {
		this.conceptByConceptFrom = conceptByConceptFrom;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "conceptTo", nullable = false)
	public Concept getConceptByConceptTo() {
		return this.conceptByConceptTo;
	}

	public void setConceptByConceptTo(Concept conceptByConceptTo) {
		this.conceptByConceptTo = conceptByConceptTo;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "relationship")
	public Set<Link> getLinks() {
		return this.links;
	}

	public void setLinks(Set<Link> links) {
		this.links = links;
	}

}
