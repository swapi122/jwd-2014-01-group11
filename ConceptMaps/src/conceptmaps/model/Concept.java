package conceptmaps.model;

// Generated Oct 14, 2014 8:51:13 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Concept generated by hbm2java
 */
@Entity
@Table(name = "concept", catalog = "conceptmapsdb")
public class Concept implements java.io.Serializable {

	private String idConcept;
	private String name;
	private String docLink;
	private Set<Node> nodes = new HashSet<Node>(0);
	private Set<Relationship> relationshipsForConcept1 = new HashSet<Relationship>(
			0);
	private Set<Relationship> relationshipsForConcept2 = new HashSet<Relationship>(
			0);

	public Concept() {
	}

	public Concept(String idConcept) {
		this.idConcept = idConcept;
	}

	public Concept(String idConcept, String name, String docLink,
			Set<Node> nodes, Set<Relationship> relationshipsForConcept1,
			Set<Relationship> relationshipsForConcept2) {
		this.idConcept = idConcept;
		this.name = name;
		this.docLink = docLink;
		this.nodes = nodes;
		this.relationshipsForConcept1 = relationshipsForConcept1;
		this.relationshipsForConcept2 = relationshipsForConcept2;
	}

	@Id
	@Column(name = "idConcept", unique = true, nullable = false, length = 20)
	public String getIdConcept() {
		return this.idConcept;
	}

	public void setIdConcept(String idConcept) {
		this.idConcept = idConcept;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "docLink", length = 45)
	public String getDocLink() {
		return this.docLink;
	}

	public void setDocLink(String docLink) {
		this.docLink = docLink;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "concept")
	public Set<Node> getNodes() {
		return this.nodes;
	}

	public void setNodes(Set<Node> nodes) {
		this.nodes = nodes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "conceptByConcept1")
	public Set<Relationship> getRelationshipsForConcept1() {
		return this.relationshipsForConcept1;
	}

	public void setRelationshipsForConcept1(
			Set<Relationship> relationshipsForConcept1) {
		this.relationshipsForConcept1 = relationshipsForConcept1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "conceptByConcept2")
	public Set<Relationship> getRelationshipsForConcept2() {
		return this.relationshipsForConcept2;
	}

	public void setRelationshipsForConcept2(
			Set<Relationship> relationshipsForConcept2) {
		this.relationshipsForConcept2 = relationshipsForConcept2;
	}

}
